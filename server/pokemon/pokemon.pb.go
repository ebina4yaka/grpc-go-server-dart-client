// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.3
// source: pokemon.proto

package pokemon

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PokeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexNo  int32 `protobuf:"varint,1,opt,name=indexNo,proto3" json:"indexNo,omitempty"`
	FormType int32 `protobuf:"varint,2,opt,name=formType,proto3" json:"formType,omitempty"`
}

func (x *PokeQuery) Reset() {
	*x = PokeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pokemon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PokeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PokeQuery) ProtoMessage() {}

func (x *PokeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_pokemon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PokeQuery.ProtoReflect.Descriptor instead.
func (*PokeQuery) Descriptor() ([]byte, []int) {
	return file_pokemon_proto_rawDescGZIP(), []int{0}
}

func (x *PokeQuery) GetIndexNo() int32 {
	if x != nil {
		return x.IndexNo
	}
	return 0
}

func (x *PokeQuery) GetFormType() int32 {
	if x != nil {
		return x.FormType
	}
	return 0
}

type Pokemon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexNo        int32  `protobuf:"varint,1,opt,name=indexNo,proto3" json:"indexNo,omitempty"`
	FormType       int32  `protobuf:"varint,2,opt,name=formType,proto3" json:"formType,omitempty"`
	FormName       string `protobuf:"bytes,3,opt,name=formName,proto3" json:"formName,omitempty"`
	Name           string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Type1          string `protobuf:"bytes,5,opt,name=type1,proto3" json:"type1,omitempty"`
	Type2          string `protobuf:"bytes,6,opt,name=type2,proto3" json:"type2,omitempty"`
	Ability1       string `protobuf:"bytes,7,opt,name=ability1,proto3" json:"ability1,omitempty"`
	Ability2       string `protobuf:"bytes,8,opt,name=ability2,proto3" json:"ability2,omitempty"`
	HiddenAbility  string `protobuf:"bytes,9,opt,name=hiddenAbility,proto3" json:"hiddenAbility,omitempty"`
	Hp             int32  `protobuf:"varint,10,opt,name=hp,proto3" json:"hp,omitempty"`
	Attack         int32  `protobuf:"varint,11,opt,name=attack,proto3" json:"attack,omitempty"`
	Defence        int32  `protobuf:"varint,12,opt,name=defence,proto3" json:"defence,omitempty"`
	SpecialAttack  int32  `protobuf:"varint,13,opt,name=specialAttack,proto3" json:"specialAttack,omitempty"`
	SpecialDefence int32  `protobuf:"varint,14,opt,name=specialDefence,proto3" json:"specialDefence,omitempty"`
	Speed          int32  `protobuf:"varint,15,opt,name=speed,proto3" json:"speed,omitempty"`
}

func (x *Pokemon) Reset() {
	*x = Pokemon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pokemon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pokemon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pokemon) ProtoMessage() {}

func (x *Pokemon) ProtoReflect() protoreflect.Message {
	mi := &file_pokemon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pokemon.ProtoReflect.Descriptor instead.
func (*Pokemon) Descriptor() ([]byte, []int) {
	return file_pokemon_proto_rawDescGZIP(), []int{1}
}

func (x *Pokemon) GetIndexNo() int32 {
	if x != nil {
		return x.IndexNo
	}
	return 0
}

func (x *Pokemon) GetFormType() int32 {
	if x != nil {
		return x.FormType
	}
	return 0
}

func (x *Pokemon) GetFormName() string {
	if x != nil {
		return x.FormName
	}
	return ""
}

func (x *Pokemon) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pokemon) GetType1() string {
	if x != nil {
		return x.Type1
	}
	return ""
}

func (x *Pokemon) GetType2() string {
	if x != nil {
		return x.Type2
	}
	return ""
}

func (x *Pokemon) GetAbility1() string {
	if x != nil {
		return x.Ability1
	}
	return ""
}

func (x *Pokemon) GetAbility2() string {
	if x != nil {
		return x.Ability2
	}
	return ""
}

func (x *Pokemon) GetHiddenAbility() string {
	if x != nil {
		return x.HiddenAbility
	}
	return ""
}

func (x *Pokemon) GetHp() int32 {
	if x != nil {
		return x.Hp
	}
	return 0
}

func (x *Pokemon) GetAttack() int32 {
	if x != nil {
		return x.Attack
	}
	return 0
}

func (x *Pokemon) GetDefence() int32 {
	if x != nil {
		return x.Defence
	}
	return 0
}

func (x *Pokemon) GetSpecialAttack() int32 {
	if x != nil {
		return x.SpecialAttack
	}
	return 0
}

func (x *Pokemon) GetSpecialDefence() int32 {
	if x != nil {
		return x.SpecialDefence
	}
	return 0
}

func (x *Pokemon) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

var File_pokemon_proto protoreflect.FileDescriptor

var file_pokemon_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x6f, 0x6b, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x70, 0x6f, 0x6b, 0x65, 0x6d, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x09, 0x50, 0x6f, 0x6b, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0x9f, 0x03, 0x0a, 0x07,
	0x50, 0x6f, 0x6b, 0x65, 0x6d, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79,
	0x70, 0x65, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x32, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x32, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x41, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x70, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x68, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x12,
	0x26, 0x0a, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x44, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x32, 0x46, 0x0a,
	0x0e, 0x50, 0x6f, 0x6b, 0x65, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x34, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6b, 0x65, 0x6d, 0x6f, 0x6e, 0x12, 0x12, 0x2e,
	0x70, 0x6f, 0x6b, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x6b, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x1a, 0x10, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x6b, 0x65,
	0x6d, 0x6f, 0x6e, 0x22, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x70, 0x6f, 0x6b, 0x65, 0x6d, 0x6f, 0x6e,
	0x3b, 0x70, 0x6f, 0x6b, 0x65, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pokemon_proto_rawDescOnce sync.Once
	file_pokemon_proto_rawDescData = file_pokemon_proto_rawDesc
)

func file_pokemon_proto_rawDescGZIP() []byte {
	file_pokemon_proto_rawDescOnce.Do(func() {
		file_pokemon_proto_rawDescData = protoimpl.X.CompressGZIP(file_pokemon_proto_rawDescData)
	})
	return file_pokemon_proto_rawDescData
}

var file_pokemon_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pokemon_proto_goTypes = []interface{}{
	(*PokeQuery)(nil), // 0: pokemon.PokeQuery
	(*Pokemon)(nil),   // 1: pokemon.Pokemon
}
var file_pokemon_proto_depIdxs = []int32{
	0, // 0: pokemon.PokemonService.GetPokemon:input_type -> pokemon.PokeQuery
	1, // 1: pokemon.PokemonService.GetPokemon:output_type -> pokemon.Pokemon
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pokemon_proto_init() }
func file_pokemon_proto_init() {
	if File_pokemon_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pokemon_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PokeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pokemon_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pokemon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pokemon_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pokemon_proto_goTypes,
		DependencyIndexes: file_pokemon_proto_depIdxs,
		MessageInfos:      file_pokemon_proto_msgTypes,
	}.Build()
	File_pokemon_proto = out.File
	file_pokemon_proto_rawDesc = nil
	file_pokemon_proto_goTypes = nil
	file_pokemon_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PokemonServiceClient is the client API for PokemonService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PokemonServiceClient interface {
	GetPokemon(ctx context.Context, in *PokeQuery, opts ...grpc.CallOption) (*Pokemon, error)
}

type pokemonServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPokemonServiceClient(cc grpc.ClientConnInterface) PokemonServiceClient {
	return &pokemonServiceClient{cc}
}

func (c *pokemonServiceClient) GetPokemon(ctx context.Context, in *PokeQuery, opts ...grpc.CallOption) (*Pokemon, error) {
	out := new(Pokemon)
	err := c.cc.Invoke(ctx, "/pokemon.PokemonService/GetPokemon", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PokemonServiceServer is the server API for PokemonService service.
type PokemonServiceServer interface {
	GetPokemon(context.Context, *PokeQuery) (*Pokemon, error)
}

// UnimplementedPokemonServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPokemonServiceServer struct {
}

func (*UnimplementedPokemonServiceServer) GetPokemon(context.Context, *PokeQuery) (*Pokemon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPokemon not implemented")
}

func RegisterPokemonServiceServer(s *grpc.Server, srv PokemonServiceServer) {
	s.RegisterService(&_PokemonService_serviceDesc, srv)
}

func _PokemonService_GetPokemon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PokeQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PokemonServiceServer).GetPokemon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pokemon.PokemonService/GetPokemon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PokemonServiceServer).GetPokemon(ctx, req.(*PokeQuery))
	}
	return interceptor(ctx, in, info, handler)
}

var _PokemonService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pokemon.PokemonService",
	HandlerType: (*PokemonServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPokemon",
			Handler:    _PokemonService_GetPokemon_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pokemon.proto",
}
